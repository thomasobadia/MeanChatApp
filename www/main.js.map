{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/pages/chat-page/chat-page.component.css","webpack:///./src/app/pages/chat-page/chat-page.component.html","webpack:///./src/app/pages/chat-page/chat-page.component.ts","webpack:///./src/app/pages/conversation-page/conversation-page.component.css","webpack:///./src/app/pages/conversation-page/conversation-page.component.html","webpack:///./src/app/pages/conversation-page/conversation-page.component.ts","webpack:///./src/app/pages/home-page/home-page.component.css","webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/login-page/login-page.component.html","webpack:///./src/app/pages/login-page/login-page.component.ts","webpack:///./src/app/pages/register-page/register-page.component.html","webpack:///./src/app/pages/register-page/register-page.component.ts","webpack:///./src/app/partials/test/test.component.css","webpack:///./src/app/partials/test/test.component.html","webpack:///./src/app/partials/test/test.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/conversation/conversation.service.ts","webpack:///./src/app/services/message/message.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<header>\\n  <nav>\\n    <a [routerLink]=\\\"'/'\\\">Home</a>\\n    <a [routerLink]=\\\"'/login'\\\">Login</a>\\n    <a [routerLink]=\\\"'/register'\\\">Register</a>\\n    <a [routerLink]=\\\"'/chat'\\\">Chat</a>\\n  </nav>\\n  <a (click)=\\\"disconnect()\\\">Disconnect</a>\\n\\n</header>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\\n\"","// Import\nimport { Component } from '@angular/core';\nimport { UserModel } from \"./models/user.model\";\nimport { AuthService } from \"./services/auth/auth.service\";\nimport {Router} from \"@angular/router\"\n\n// Definition\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [ AuthService ]\n  // styleUrls: ['./app.component.css']\n})\n\n// Export\nexport class AppComponent {\n  public myTitle: String;\n  public formData: UserModel;\n  public loginData: UserModel;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){\n    this.formData = {\n      email: undefined,\n      name: undefined,\n      password: undefined\n    }\n    this.loginData = {\n      email: undefined,\n      password: undefined\n    }\n\n  }\n  public disconnect(): void {\n    console.log('hello')\n\n    this.authService.disconnect()\n    document.cookie = 'berners=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    this.router.navigate(['/'])\n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRouter } from \"./app.router\";\n\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './partials/test/test.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { ChatPageComponent } from './pages/chat-page/chat-page.component';\nimport { ConversationPageComponent } from './pages/conversation-page/conversation-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    HomePageComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    ChatPageComponent,\n    ConversationPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRouter\n  ],\n  providers: [ HttpClientModule ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\r\nImport\r\n*/\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./pages/home-page/home-page.component\";\r\nimport { RegisterPageComponent } from \"./pages/register-page/register-page.component\";\r\nimport { LoginPageComponent } from \"./pages/login-page/login-page.component\";\r\nimport { ChatPageComponent } from \"./pages/chat-page/chat-page.component\";\r\nimport { ConversationPageComponent } from \"./pages/conversation-page/conversation-page.component\";\r\n\r\n//\r\n\r\n/*\r\nDefinition\r\n*/\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomePageComponent\r\n    },\r\n    {\r\n      path: 'register',\r\n      component: RegisterPageComponent\r\n    },\r\n    {\r\n      path: 'login',\r\n      component: LoginPageComponent\r\n    },\r\n    {\r\n      path: 'chat',\r\n      component: ChatPageComponent\r\n    },\r\n    {\r\n      path: 'conversation/:id',\r\n      component: ConversationPageComponent\r\n    }\r\n]\r\n//\r\n\r\n/*\r\nExport\r\n*/\r\nexport const AppRouter: ModuleWithProviders = RouterModule.forRoot(routes)\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXQtcGFnZS9jaGF0LXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Liste des amis</h1>\\n<ul *ngIf=\\\"usersArray\\\">\\n  <li *ngFor=\\\"let user of usersArray.users\\\">\\n    <button (click)=\\\"createConversation( user._id )\\\">{{ user.name }}</button>\\n  </li>\\n</ul>\\n\\n<h1>Liste des Conversations</h1>\\n\\n<ul *ngIf=\\\"conversationsArray\\\">\\n  <li *ngFor=\\\"let conversation of conversationsArray.conversations\\\">\\n    <a [routerLink]=\\\"['/conversation',  conversation._id]\\\">{{ conversation._id }}</a>\\n  </li>\\n</ul>\\n<ul *ngIf=\\\"conversationsArray == undefined\\\">\\n  <p>No conversations yet</p>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { UserService } from \"../../services/user/user.service\";\nimport { ConversationService } from \"../../services/conversation/conversation.service\";\nimport { UserModel } from '../../models/user.model';\nimport {Router} from \"@angular/router\"\n\n\n@Component({\n  selector: 'app-chat-page',\n  templateUrl: './chat-page.component.html',\n  styleUrls: ['./chat-page.component.css'],\n  providers: [ AuthService ] && [ UserService ] && [ ConversationService ]\n\n})\nexport class ChatPageComponent implements OnInit {\n  public usersArray;\n  public conversationsArray;\n  public userId;\n\n\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private conversationService: ConversationService,\n    private router: Router,\n  ) {\n\n  }\n\n  public authUser( ): void {\n    this.authService.auth()\n    .then( (apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.msg == 'user auth'){\n        this.userId = apiResponse.data._id\n        this.showConversations(this.userId)\n        console.log(this.userId)\n        console.log('User logged')\n      } else{\n        console.log('ca a pas marché')\n        this.router.navigate(['/login'])\n\n      }\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  public showUsers( ): void {\n    this.userService.getUsers()\n    .then( (apiResponse) => {\n      this.usersArray = apiResponse\n      console.log(this.usersArray)\n\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  public createConversation( id ): void {\n    this.conversationService.createConv({user1: this.userId, user2: id})\n    .then( apiResponse => {\n      console.log(apiResponse)\n      console.log(\"this.conversationsArray\")\n      console.log(this.conversationsArray)\n      if(apiResponse.msg ==\"Conv created: ok\"){\n        this.conversationsArray.conversations.push(apiResponse.data)\n\n      }\n    } )\n    .catch( apiResponse => console.log(apiResponse) )\n    console.log(id , 'et',  this.userId)\n  }\n\n  public showConversations(id): void {\n    console.log('win')\n    console.log({id: id})\n    this.conversationService.getConversations({id: id})\n    .then( (apiResponse) => {\n      this.conversationsArray = apiResponse\n      console.log(this.conversationsArray)\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  public showUsernameFromId(id, myId): void {\n    // show users from conv\n\n    this.userService.getUsernamefromId({id: id})\n    .then( (apiResponse) => {\n      if(apiResponse.data.user1 == myId){\n        console.log(this.usersArray.users.find((x => x._id === apiResponse.data.user2)).name)\n\n      } else {\n        console.log('ton pote cest' + this.showUserFromId(apiResponse.data.user1))\n      }\n\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  public showUserFromId(id: String) {\n    this.userService.getUserfromId({id: id})\n    .then( (apiResponse) => {\n      console.log('ton pote cest' + apiResponse.data.name)\n    })\n    .catch( apiResponse => {\n      return apiResponse.data\n    })\n\n    console.log(\"avant\")\n\n  }\n\n\n\n\n  ngOnInit() {\n    this.authUser()\n    this.showUsers()\n\n\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbnZlcnNhdGlvbi1wYWdlL2NvbnZlcnNhdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<form (submit)=\\\"createMessage() \\\" action=\\\"\\\">\\n\\n  <!-- Data binding VUE <=> CTRL : [(...)] -->\\n    <input\\n    [(ngModel)]=\\\"messageFormData\\\"\\n     type=\\\"text\\\"\\n     name =\\\"content\\\"\\n    >\\n\\n    <button type=\\\"submit\\\">Send</button>\\n  </form>\\n\\n\\n  <div *ngIf=\\\"messagesArray\\\">\\n\\n    <div *ngFor=\\\"let message of messagesArray.messages\\\">\\n      <div style=\\\"text-align: left\\\" *ngIf=\\\"message.from !== this.myId\\\" >\\n          <p>{{message.date }}</p>\\n          <p>{{message.content }}</p>\\n      </div>\\n      <div style=\\\"text-align: right\\\" *ngIf=\\\"message.from == this.myId\\\" >\\n          <p>{{message.date }}</p>\\n          <p>{{message.content }}</p>\\n      </div>\\n\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { MessageService } from '../../services/message/message.service';\nimport { MessageModel } from \"../../models/message.model\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as io from 'socket.io-client';\n\n\n@Component({\n  selector: 'app-conversation-page',\n  templateUrl: './conversation-page.component.html',\n  styleUrls: ['./conversation-page.component.css'],\n  providers: [ AuthService ] && [ MessageService ]\n})\nexport class ConversationPageComponent implements OnInit {\n  public otherUserId\n  public myId\n  public messagesArray\n  public messageFormData\n  public conversationId\n  public socket: SocketIOClient.Socket;\n\n\n\n  constructor( private authService: AuthService, private messageService: MessageService, private router: Router, private route: ActivatedRoute ) {\n    this.messageFormData = null\n    this.socket = io.connect('http://localhost:8080');\n\n\n    // this.myId = TODO\n    // this.otherUserId = TODO\n  }\n\n  public authUser( ): void {\n    this.authService.auth()\n    .then( (apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.msg == 'user auth'){\n        this.myId = apiResponse.data._id\n        console.log('mon id est  ' + this.myId)\n        console.log('User logged')\n        this.showConversationFromId(this.conversationId)\n      } else{\n        this.router.navigate(['/login'])\n\n      }\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n  public createMessage(): void {\n    console.log('created')\n    let time = new Date();\n\n    let from : String = this.myId\n    let to : String =  this.otherUserId\n    let date: String = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    let content: String = this.messageFormData\n    let message: MessageModel = {\n      idconversation : this.conversationId,\n      from : from,\n      to: to,\n      date:date,\n      content:content\n    }\n\n    this.sendMessage(message)\n    this.showMessages()\n\n  }\n  public showConversationFromId(id): void {\n    // show users from conv\n    console.log(id)\n    this.messageService.getConversationfromId({id: id})\n    .then( (apiResponse) => {\n      if(apiResponse.data.user1 == this.myId){\n        console.log(apiResponse)\n        this.otherUserId = apiResponse.data.user2\n\n      } else {\n        console.log(apiResponse.data + '2')\n        this.otherUserId = apiResponse.data.user1\n      }\n      console.log('other user id : ' + this.otherUserId)\n\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n  public sendMessage( message: MessageModel ): void {\n    this.messageService.send(message)\n    .then(  apiResponse => {\n      console.log(apiResponse)\n      this.socket.emit('refreshMessages', {msg: this.conversationId})\n    } )\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  public showMessages( ): void {\n    this.messageService.getMessages({id:this.conversationId })\n    .then( (apiResponse) => {\n      this.messagesArray = apiResponse\n      console.log(this.messagesArray)\n\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  ngOnInit() {\n\n\n    this.route.params.subscribe((params) => {\n      // this callback is fired every time the parameters change\n      this.conversationId = params.id\n  })\n\n    this.authUser()\n    this.showMessages( )\n    this.socket.on('refresh', (data) => {\n      console.log('**********************************************************')\n      console.log(data.msg.msg)\n      if(data.msg.msg == this.conversationId){\n        this.showMessages()\n      }\n    })\n}\n\n\n}\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<p>\\n  home-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n  providers: [ AuthService ]\n})\nexport class HomePageComponent implements OnInit {\n  public isLoggedIn: Boolean = false\n\n  constructor( private authService: AuthService ) { }\n\n  public authUser( ): void {\n    this.authService.auth()\n    .then( (apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.msg == 'user auth'){\n        this.isLoggedIn = true\n      } else{\n        this.isLoggedIn = false\n\n      }\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  ngOnInit() {\n    console.log(this.isLoggedIn)\n  }\n\n}\n","module.exports = \"\\n\\n<h1 [textContent]=\\\"myTitle\\\"> </h1>\\n\\n\\n\\n<form (submit)=\\\"loginUser()\\\" action=\\\"\\\">\\n\\n  <input\\n  [(ngModel)]=\\\"loginData.email\\\"\\n   type=\\\"text\\\"\\n   name =\\\"email\\\"\\n  >\\n  <input\\n  [(ngModel)]=\\\"loginData.password\\\"\\n   type=\\\"text\\\"\\n   name =\\\"password\\\"\\n  >\\n\\n  <button type=\\\"submit\\\">Login</button>\\n</form>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from \"../../models/user.model\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport {Router} from \"@angular/router\"\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  providers: [ AuthService ]\n\n})\nexport class LoginPageComponent implements OnInit {\n  public loginData: UserModel;\n\n  constructor( private authService: AuthService, private router: Router ) {\n    this.loginData = {\n      email: undefined,\n      name: undefined,\n      password: undefined\n    }\n   }\n\n  public loginUser( ): void {\n    this.authService.login(this.loginData)\n    .then( (apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.msg == 'User logged'){\n        this.router.navigate(['/chat'])\n\n      } else{\n        console.log('pas log')\n\n      }\n    })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n  public authUser( ): void {\n    this.authService.auth()\n    .then( (apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.msg == 'user auth'){\n        this.router.navigate(['/chat'])\n      } })\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n\n  ngOnInit() {\n    this.authUser()\n  }\n\n}\n","module.exports = \"<!-- Data binding VUE => CTRL : (...) -->\\n\\n<form (submit)=\\\"formSubmit() \\\" action=\\\"\\\">\\n\\n  <!-- Data binding VUE <=> CTRL : [(...)] -->\\n    <input\\n    [(ngModel)]=\\\"formData.name\\\"\\n     type=\\\"text\\\"\\n     name =\\\"name\\\"\\n    >\\n    <input\\n    [(ngModel)]=\\\"formData.email\\\"\\n     type=\\\"text\\\"\\n     name =\\\"email\\\"\\n    >\\n    <input\\n    [(ngModel)]=\\\"formData.password\\\"\\n     type=\\\"text\\\"\\n     name =\\\"password\\\"\\n    >\\n\\n    <button type=\\\"submit\\\">Register</button>\\n  </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from \"../../models/user.model\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  providers: [ AuthService ]\n\n})\nexport class RegisterPageComponent implements OnInit {\n  public formData: UserModel;\n\n  constructor( private authService: AuthService, private route: ActivatedRoute, private router: Router ) {\n    this.formData = {\n      email: undefined,\n      name: undefined,\n      password: undefined\n    }\n   }\n\n  public formSubmit( ): void {\n    this.authService.register(this.formData)\n    .then( apiResponse => this.router.navigate(['/chat']) )\n    .catch( apiResponse => console.log(apiResponse) )\n  }\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRpYWxzL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  test works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  // Hooks\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UserModel } from \"../../models/user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService{\n\n\n  constructor(private http: HttpClient) { }\n\n  public register( data : UserModel): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/user/`, data, {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n  public login( data : UserModel): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/auth/login`, data, {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n  public auth(): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/auth/auth`,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n  public disconnect(): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/auth/disconnect`,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n\n\n  private getData(res: any) {\n    return res || {};\n  }\n  private handleError(err:any) {\n    return Promise.reject(err)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UserModel } from \"../../models/user.model\";\nimport { ConversationModel } from \"../../models/conversation.model\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversationService {\n\n  constructor(private http: HttpClient) { }\n\n  public createConv( data : ConversationModel): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/conversation/`, data, {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n  public getConversations(data: Object): Promise<any> {\n    console.log(\"data\")\n    console.log(data)\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/conversation/getall`, data , {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n\n\n  private getData(res: any) {\n    return res || {};\n  }\n  private handleError(err:any) {\n    return Promise.reject(err)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { MessageModel } from \"../../models/message.model\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http: HttpClient) { }\n\n\n  public send( data : MessageModel): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/message/`, data, {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n  public getMessages(data: Object): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/message/getFromId`, data,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n  public getConversationfromId(data: Object): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/conversation/fromId`, data,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n\n\n\n  private getData(res: any) {\n    return res || {};\n  }\n  private handleError(err:any) {\n    return Promise.reject(err)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUsers(): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.get(`http://localhost:9876/api/user`,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n  public getUsernamefromId(data: Object): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/conversation/fromId`, data,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n  public getUserfromId(data: Object): Promise<any> {\n    let myHeader = new HttpHeaders()\n    myHeader.append('Content-type', 'application/json')\n    return this.http.post(`http://localhost:9876/api/user/fromId`, data,  {headers: myHeader})\n    .toPromise()\n    .then(this.getData)\n    .catch(this.handleError);\n  }\n\n\n\n\n  private getData(res: any) {\n    return res || {};\n  }\n  private handleError(err:any) {\n    return Promise.reject(err)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}